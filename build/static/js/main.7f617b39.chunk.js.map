{"version":3,"sources":["Components/Table/index.module.scss","Components/Table/Identity.module.scss","Components/ProductTypes/ProductTypesContainer/index.module.scss","Components/Headers/index.module.scss","App.module.scss","Components/Error/index.module.scss","Context/index.tsx","Components/Link/index.tsx","Components/Headers/index.tsx","Components/Table/Identity.tsx","Components/Table/index.tsx","Components/Error/index.tsx","Components/Endpoint/index.tsx","Components/ProductTypes/ProductTypesContainer/index.tsx","dataUtilities.ts","Components/ProductTypes/Products.tsx","Components/ProductTypes/Items.tsx","App.tsx","reportWebVitals.ts","index.tsx","Components/Endpoint/index.module.scss"],"names":["module","exports","initialState","linkSuccess","isItemAccess","linkToken","accessToken","itemId","isError","backend","products","linkTokenError","error_type","error_code","error_message","Context","createContext","Provider","QuickstartProvider","props","useReducer","state","action","type","dispatch","value","children","Link","useContext","onSuccess","React","useCallback","public_token","a","fetch","method","headers","body","response","ok","json","data","item_id","access_token","setToken","window","history","pushState","isOauth","config","token","location","href","includes","receivedRedirectUri","usePlaidLink","open","ready","useEffect","large","onClick","disabled","displayName","Header","className","styles","grid","title","subtitle","target","warning","itemAccessContainer","itemAccessRow","idName","tokenText","requests","introPar","linkButton","Identity","identityHeaders","categories","map","category","index","identityHeader","identityRows","item","identityDataRow","identityDataField","field","identityTable","identityHeadersRow","identityDataBody","Table","headerField","rows","dataRows","dataField","slice","isIdentity","dataTable","header","headerRow","errorPaths","ITEM_ERROR","INSTITUTION_ERROR","API_ERROR","ASSET_REPORT_ERROR","BANK_TRANSFER_ERROR","INVALID_INPUT","INVALID_REQUEST","INVALID_RESULT","OAUTH_ERROR","PAYMENT_ERROR","RATE_LIMIT_EXCEEDED","RECAPTCHA_ERROR","SANDBOX_ERROR","Error","useState","path","setPath","errorType","error","toLowerCase","errorTop","errorContainer","code","status_code","errorContents","errorItem","errorTitle","errorData","errorCode","pinkBox","errorMessage","display_message","small","wide","learnMore","Endpoint","showTable","setShowTable","transformedData","setTransformedData","pdf","setPdf","setError","isLoading","setIsLoading","getData","endpoint","transformData","endpointContainer","info","post","endpointContents","endpointHeader","name","endpointName","schema","endpointDescription","description","buttonsContainer","centered","secondary","sendRequest","componentProps","download","TypeContainer","container","productType","formatCurrency","number","undefined","parseFloat","toFixed","toLocaleString","authCategories","transactionsCategories","identityCategories","balanceCategories","investmentsCategories","investmentsTransactionsCategories","liabilitiesCategories","itemCategories","accountsCategories","paymentCategories","assetsCategories","transferCategories","incomePaystubsCategories","transformAuthData","numbers","ach","achNumbers","account","accounts","filter","account_id","balance","balances","available","current","iso_currency_code","routing","transformTransactionsData","latest_transactions","t","amount","date","transformIdentityData","final","identity","owners","forEach","owner","names","emails","email","phones","phone_numbers","phone","addresses","address","street","city","region","postal_code","num","Math","max","length","i","obj","phoneNumbers","push","transformBalanceData","subtype","mask","transformInvestmentsData","holdings","sort","b","holding","acc","security","securities","sec","security_id","quantity","close_price","price","transformInvestmentTransactionsData","investments_transactions","investment_transactions","investmentTransaction","transformLiabilitiesData","liabilitiesData","liabilities","credit","last_payment_date","last_payment_amount","mortgages","mortgage","student","concat","transformTransferData","transferData","transfer","transferId","id","achClass","ach_class","network","status","transformItemData","institution","billed","billed_products","join","available_products","transformAccountsData","transformPaymentData","statusUpdate","payment","last_status_update","replace","Date","toISOString","paymentId","payment_id","currency","recipientId","recipient_id","transformAssetsData","items","flatMap","transactions","daysAvailable","days_available","transformIncomePaystubsData","paystubsItemsArray","paystubs","finalArray","ActualEarningVariable","earnings","j","breakdown","payStubItem","employer","currentAmount","current_amount","Products","ProductTypesContainer","Items","App","getInfo","paymentInitiation","generateToken","link_token","localStorage","setItem","getItem","init","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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,MAAO,SAIE0F,GAAwC,CACnD,CACEhH,MAAO,QACPsB,MAAO,SAET,CACEtB,MAAO,SACPsB,MAAO,UAET,CACEtB,MAAO,gBACPsB,MAAO,gBAET,CACEtB,MAAO,YACPsB,MAAO,cAIE2F,GAAuC,CAClD,CACEjH,MAAO,OACPsB,MAAO,QAET,CACEtB,MAAO,UACPsB,MAAO,WAET,CACEtB,MAAO,UACPsB,MAAO,WAET,CACEtB,MAAO,OACPsB,MAAO,SAIE4F,GAA2C,CACtD,CACElH,MAAO,eACPsB,MAAO,QAET,CACEtB,MAAO,OACPsB,MAAO,QAET,CACEtB,MAAO,WACPsB,MAAO,YAET,CACEtB,MAAO,cACPsB,MAAO,SAET,CACEtB,MAAO,QACPsB,MAAO,UAIE6F,GAAuD,CAClE,CACEnH,MAAO,OACPsB,MAAO,QAET,CACEtB,MAAO,SACPsB,MAAO,UAET,CACEtB,MAAO,OACPsB,MAAO,SAIE8F,GAA2C,CACtD,CACEpH,MAAO,OACPsB,MAAO,QAET,CACEtB,MAAO,OACPsB,MAAO,QAET,CACEtB,MAAO,oBACPsB,MAAO,QAET,CACEtB,MAAO,sBACPsB,MAAO,WAIE+F,GAAoC,CAC/C,CACErH,MAAO,mBACPsB,MAAO,QAET,CACEtB,MAAO,kBACPsB,MAAO,UAET,CACEtB,MAAO,qBACPsB,MAAO,cAIEgG,GAAwC,CACnD,CACEtH,MAAO,OACPsB,MAAO,QAET,CACEtB,MAAO,UACPsB,MAAO,WAET,CACEtB,MAAO,UACPsB,MAAO,WAET,CACEtB,MAAO,OACPsB,MAAO,SAIEiG,GAAuC,CAClD,CACEvH,MAAO,aACPsB,MAAO,aAET,CACEtB,MAAO,SACPsB,MAAO,UAET,CACEtB,MAAO,SACPsB,MAAO,UAET,CACEtB,MAAO,gBACPsB,MAAO,gBAET,CACEtB,MAAO,eACPsB,MAAO,gBAIEkG,GAAsC,CACjD,CACExH,MAAO,UACPsB,MAAO,WAET,CACEtB,MAAO,eACPsB,MAAO,gBAET,CACEtB,MAAO,UACPsB,MAAO,WAET,CACEtB,MAAO,iBACPsB,MAAO,kBAIEmG,GAAw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","file":"static/js/main.7f617b39.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dataTable\":\"Table_dataTable__2A9u0\",\"headerRow\":\"Table_headerRow__j3hlb\",\"headerField\":\"Table_headerField__P7uGI\",\"dataRows\":\"Table_dataRows__8GGqI\",\"dataField\":\"Table_dataField__2Gm9L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"identityTable\":\"Identity_identityTable__2HiEG\",\"identityHeadersRow\":\"Identity_identityHeadersRow__aJPAg\",\"identityHeader\":\"Identity_identityHeader__3CnTq\",\"identityDataBody\":\"Identity_identityDataBody__YcLiO\",\"identityDataRow\":\"Identity_identityDataRow__1yjEo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ProductTypesContainer_container__3ViDi\",\"header\":\"ProductTypesContainer_header__3QI-c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"Headers_grid__2yqRD\",\"title\":\"Headers_title__2tnKj\",\"subtitle\":\"Headers_subtitle__15jt2\",\"introPar\":\"Headers_introPar__1ZsXA\",\"linkButton\":\"Headers_linkButton__1imQa\",\"itemAccessContainer\":\"Headers_itemAccessContainer__1pgYu\",\"itemAccessRow\":\"Headers_itemAccessRow__3AeS9\",\"idName\":\"Headers_idName__2uy2o\",\"tokenText\":\"Headers_tokenText__kmzMH\",\"requests\":\"Headers_requests__1U1Fb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"emphasis\":\"App_emphasis__1NfWT\",\"container\":\"App_container__3rTYC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorTop\":\"Error_errorTop__ixYvd\",\"errorContainer\":\"Error_errorContainer__1VtB_\",\"code\":\"Error_code__Ini3t\",\"errorContents\":\"Error_errorContents__1sQf9\",\"errorItem\":\"Error_errorItem__2UNs1\",\"errorTitle\":\"Error_errorTitle__2hQha\",\"errorData\":\"Error_errorData__196TZ\",\"errorCode\":\"Error_errorCode__2FdtU\",\"pinkBox\":\"Error_pinkBox__2E0WF\",\"errorMessage\":\"Error_errorMessage__1KQkr\",\"learnMore\":\"Error_learnMore__3aSt7\"};","import { createContext, useReducer, Dispatch, ReactNode } from \"react\";\r\n\r\ninterface QuickstartState {\r\n  linkSuccess: boolean;\r\n  isItemAccess: boolean;\r\n  linkToken: string | null;\r\n  accessToken: string | null;\r\n  itemId: string | null;\r\n  isError: boolean;\r\n  backend: boolean;\r\n  products: string[];\r\n  linkTokenError: {\r\n    error_message: string;\r\n    error_code: string;\r\n    error_type: string;\r\n  };\r\n}\r\n\r\nconst initialState: QuickstartState = {\r\n  linkSuccess: false,\r\n  isItemAccess: true,\r\n  linkToken: \"\", // Don't set to null or error message will show up briefly when site loads\r\n  accessToken: null,\r\n  itemId: null,\r\n  isError: false,\r\n  backend: true,\r\n  products: [\"transactions\"],\r\n  linkTokenError: {\r\n    error_type: \"\",\r\n    error_code: \"\",\r\n    error_message: \"\",\r\n  },\r\n};\r\n\r\ntype QuickstartAction = {\r\n  type: \"SET_STATE\";\r\n  state: Partial<QuickstartState>;\r\n};\r\n\r\ninterface QuickstartContext extends QuickstartState {\r\n  dispatch: Dispatch<QuickstartAction>;\r\n}\r\n\r\nconst Context = createContext<QuickstartContext>(\r\n  initialState as QuickstartContext\r\n);\r\n\r\nconst { Provider } = Context;\r\nexport const QuickstartProvider: React.FC<{ children: ReactNode }> = (\r\n  props\r\n) => {\r\n  const reducer = (\r\n    state: QuickstartState,\r\n    action: QuickstartAction\r\n  ): QuickstartState => {\r\n    switch (action.type) {\r\n      case \"SET_STATE\":\r\n        return { ...state, ...action.state };\r\n      default:\r\n        return { ...state };\r\n    }\r\n  };\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  return <Provider value={{ ...state, dispatch }}>{props.children}</Provider>;\r\n};\r\n\r\nexport default Context;\r\n","import React, { useEffect, useContext } from \"react\";\r\nimport { usePlaidLink } from \"react-plaid-link\";\r\nimport Button from \"plaid-threads/Button\";\r\n\r\nimport Context from \"../../Context\";\r\n\r\nconst Link = () => {\r\n  const { linkToken, dispatch } = useContext(Context);\r\n\r\n  const onSuccess = React.useCallback(\r\n    (public_token: string) => {\r\n      // send public_token to server\r\n      const setToken = async () => {\r\n        const response = await fetch(\"/api/set_access_token\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/x-www-form-urlencoded;charset=UTF-8\",\r\n          },\r\n          body: `public_token=${public_token}`,\r\n        });\r\n        if (!response.ok) {\r\n          dispatch({\r\n            type: \"SET_STATE\",\r\n            state: {\r\n              itemId: `no item_id retrieved`,\r\n              accessToken: `no access_token retrieved`,\r\n              isItemAccess: false,\r\n            },\r\n          });\r\n          return;\r\n        }\r\n        const data = await response.json();\r\n        dispatch({\r\n          type: \"SET_STATE\",\r\n          state: {\r\n            itemId: data.item_id,\r\n            accessToken: data.access_token,\r\n            isItemAccess: true,\r\n          },\r\n        });\r\n      };\r\n      setToken();\r\n      dispatch({ type: \"SET_STATE\", state: { linkSuccess: true } });\r\n      window.history.pushState(\"\", \"\", \"/\");\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  let isOauth = false;\r\n  const config: Parameters<typeof usePlaidLink>[0] = {\r\n    token: linkToken!,\r\n    onSuccess,\r\n  };\r\n\r\n  if (window.location.href.includes(\"?oauth_state_id=\")) {\r\n    // TODO: figure out how to delete this ts-ignore\r\n    // @ts-ignore\r\n    config.receivedRedirectUri = window.location.href;\r\n    isOauth = true;\r\n  }\r\n\r\n  const { open, ready } = usePlaidLink(config);\r\n\r\n  useEffect(() => {\r\n    if (isOauth && ready) {\r\n      open();\r\n    }\r\n  }, [ready, open, isOauth]);\r\n\r\n  return (\r\n    <Button type=\"button\" large onClick={() => open()} disabled={!ready}>\r\n      Launch Link\r\n    </Button>\r\n  );\r\n};\r\n\r\nLink.displayName = \"Link\";\r\n\r\nexport default Link;\r\n","import React, { useContext } from \"react\";\r\nimport Callout from \"plaid-threads/Callout\";\r\nimport Button from \"plaid-threads/Button\";\r\nimport InlineLink from \"plaid-threads/InlineLink\";\r\n\r\nimport Link from \"../Link\";\r\nimport Context from \"../../Context\";\r\n\r\nimport styles from \"./index.module.scss\";\r\n\r\nconst Header = () => {\r\n  const {\r\n    itemId,\r\n    accessToken,\r\n    linkToken,\r\n    linkSuccess,\r\n    isItemAccess,\r\n    backend,\r\n    linkTokenError,\r\n  } = useContext(Context);\r\n\r\n  return (\r\n    <div className={styles.grid}>\r\n      <h3 className={styles.title}>Plaid Quickstart</h3>\r\n\r\n      {!linkSuccess ? (\r\n        <>\r\n          <h4 className={styles.subtitle}>\r\n            A sample end-to-end integration with Plaid\r\n          </h4>\r\n          <p className={styles.introPar}>\r\n            The Plaid flow begins when your user wants to connect their bank\r\n            account to your app. Simulate this by clicking the button below to\r\n            launch Link - the client-side component that your users will\r\n            interact with in order to link their accounts to Plaid and allow you\r\n            to access their accounts via the Plaid API.\r\n          </p>\r\n          {/* message if backend is not running and there is no link token */}\r\n          {!backend ? (\r\n            <Callout warning>\r\n              Unable to fetch link_token: please make sure your backend server\r\n              is running and that your .env file has been configured with your\r\n              <code>PLAID_CLIENT_ID</code> and <code>PLAID_SECRET</code>.\r\n            </Callout>\r\n          ) : /* message if backend is running and there is no link token */\r\n          linkToken == null && backend ? (\r\n            <Callout warning>\r\n              <div>\r\n                Unable to fetch link_token: please make sure your backend server\r\n                is running and that your .env file has been configured\r\n                correctly.\r\n              </div>\r\n              <div>\r\n                If you are on a Windows machine, please ensure that you have\r\n                cloned the repo with{\" \"}\r\n                <InlineLink\r\n                  href=\"https://github.com/plaid/quickstart#special-instructions-for-windows\"\r\n                  target=\"_blank\"\r\n                >\r\n                  symlinks turned on.\r\n                </InlineLink>{\" \"}\r\n                You can also try checking your{\" \"}\r\n                <InlineLink\r\n                  href=\"https://dashboard.plaid.com/activity/logs\"\r\n                  target=\"_blank\"\r\n                >\r\n                  activity log\r\n                </InlineLink>{\" \"}\r\n                on your Plaid dashboard.\r\n              </div>\r\n              <div>\r\n                Error Code: <code>{linkTokenError.error_code}</code>\r\n              </div>\r\n              <div>\r\n                Error Type: <code>{linkTokenError.error_type}</code>{\" \"}\r\n              </div>\r\n              <div>Error Message: {linkTokenError.error_message}</div>\r\n            </Callout>\r\n          ) : linkToken === \"\" ? (\r\n            <div className={styles.linkButton}>\r\n              <Button large disabled>\r\n                Loading...\r\n              </Button>\r\n            </div>\r\n          ) : (\r\n            <div className={styles.linkButton}>\r\n              <Link />\r\n            </div>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <>\r\n          {isItemAccess ? (\r\n            <h4 className={styles.subtitle}>\r\n              Congrats! By linking an account, you have created an{\" \"}\r\n              <InlineLink\r\n                href=\"http://plaid.com/docs/quickstart/glossary/#item\"\r\n                target=\"_blank\"\r\n              >\r\n                Item\r\n              </InlineLink>\r\n              .\r\n            </h4>\r\n          ) : (\r\n            <h4 className={styles.subtitle}>\r\n              <Callout warning>\r\n                Unable to create an item. Please check your backend server\r\n              </Callout>\r\n            </h4>\r\n          )}\r\n          <div className={styles.itemAccessContainer}>\r\n            <p className={styles.itemAccessRow}>\r\n              <span className={styles.idName}>item_id</span>\r\n              <span className={styles.tokenText}>{itemId}</span>\r\n            </p>\r\n\r\n            <p className={styles.itemAccessRow}>\r\n              <span className={styles.idName}>access_token</span>\r\n              <span className={styles.tokenText}>{accessToken}</span>\r\n            </p>\r\n          </div>\r\n          {isItemAccess && (\r\n            <p className={styles.requests}>\r\n              Now that you have an access_token, you can make all of the\r\n              following requests:\r\n            </p>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nHeader.displayName = \"Header\";\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nimport { DataItem, Categories } from \"../../dataUtilities\";\r\n\r\nimport styles from \"./Identity.module.scss\";\r\n\r\ninterface Props {\r\n  data: Array<DataItem>;\r\n  categories: Array<Categories>;\r\n}\r\n\r\nconst Identity = (props: Props) => {\r\n  const identityHeaders = props.categories.map((category, index) => (\r\n    <span key={index} className={styles.identityHeader}>\r\n      {category.title}\r\n    </span>\r\n  ));\r\n\r\n  const identityRows = props.data.map((item: DataItem | any, index) => (\r\n    <div key={index} className={styles.identityDataRow}>\r\n      {props.categories.map((category: Categories, index) => (\r\n        <span key={index} className={styles.identityDataField}>\r\n          {item[category.field]}\r\n        </span>\r\n      ))}\r\n    </div>\r\n  ));\r\n\r\n  return (\r\n    <div className={styles.identityTable}>\r\n      <div className={styles.identityHeadersRow}>{identityHeaders}</div>\r\n      <div className={styles.identityDataBody}>{identityRows}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nIdentity.displayName = \"Identity\";\r\n\r\nexport default Identity;\r\n","import React from \"react\";\r\n\r\nimport { DataItem, Categories } from \"../../dataUtilities\";\r\nimport Identity from \"./Identity\";\r\n\r\nimport styles from \"./index.module.scss\";\r\n\r\ninterface Props {\r\n  data: Array<DataItem>;\r\n  categories: Array<Categories>;\r\n  isIdentity: boolean;\r\n}\r\n\r\nconst Table = (props: Props) => {\r\n  const maxRows = 15;\r\n  // regular table\r\n  const headers = props.categories.map((category, index) => (\r\n    <th key={index} className={styles.headerField}>\r\n      {category.title}\r\n    </th>\r\n  ));\r\n\r\n  const rows = props.data\r\n    .map((item: DataItem | any, index) => (\r\n      <tr key={index} className={styles.dataRows}>\r\n        {props.categories.map((category: Categories, index) => (\r\n          <td key={index} className={styles.dataField}>\r\n            {item[category.field]}\r\n          </td>\r\n        ))}\r\n      </tr>\r\n    ))\r\n    .slice(0, maxRows);\r\n\r\n  return props.isIdentity ? (\r\n    <Identity data={props.data} categories={props.categories} />\r\n  ) : (\r\n    <table className={styles.dataTable}>\r\n      <thead className={styles.header}>\r\n        <tr className={styles.headerRow}>{headers}</tr>\r\n      </thead>\r\n      <tbody className={styles.body}>{rows}</tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nTable.displayName = \"Table\";\r\n\r\nexport default Table;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Button from \"plaid-threads/Button\";\r\nimport Note from \"plaid-threads/Note\";\r\n\r\nimport { ErrorDataItem } from \"../../dataUtilities\";\r\n\r\nimport styles from \"./index.module.scss\";\r\n\r\ninterface Props {\r\n  error: ErrorDataItem;\r\n}\r\n\r\nconst errorPaths: { [key: string]: string } = {\r\n  ITEM_ERROR: \"item\",\r\n  INSTITUTION_ERROR: \"institution\",\r\n  API_ERROR: \"api\",\r\n  ASSET_REPORT_ERROR: \"assets\",\r\n  BANK_TRANSFER_ERROR: \"bank-transfers\",\r\n  INVALID_INPUT: \"invalid-input\",\r\n  INVALID_REQUEST: \"invalid-request\",\r\n  INVALID_RESULT: \"invalid-result\",\r\n  OAUTH_ERROR: \"oauth\",\r\n  PAYMENT_ERROR: \"payment\",\r\n  RATE_LIMIT_EXCEEDED: \"rate-limit-exceeded\",\r\n  RECAPTCHA_ERROR: \"recaptcha\",\r\n  SANDBOX_ERROR: \"sandbox\",\r\n};\r\n\r\nconst Error = (props: Props) => {\r\n  const [path, setPath] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const errorType = props.error.error_type!;\r\n    const errorPath = errorPaths[errorType];\r\n\r\n    setPath(\r\n      `https://plaid.com/docs/errors/${errorPath}/#${props.error.error_code?.toLowerCase()}`\r\n    );\r\n  }, [props.error]);\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.errorTop}></div>\r\n      <div className={styles.errorContainer}>\r\n        <Note error className={styles.code}>\r\n          {props.error.status_code ? props.error.status_code : \"error\"}\r\n        </Note>\r\n        <div className={styles.errorContents}>\r\n          <div className={styles.errorItem}>\r\n            <span className={styles.errorTitle}>Error code: </span>\r\n            <span className={styles.errorData}>\r\n              <div className={styles.errorCode}>\r\n                {props.error.error_code}\r\n                <div className={styles.pinkBox}></div>\r\n              </div>\r\n            </span>\r\n          </div>\r\n          <div className={styles.errorItem}>\r\n            <span className={styles.errorTitle}>Type: </span>\r\n            <span className={styles.errorData}>{props.error.error_type}</span>\r\n          </div>\r\n          <div className={styles.errorItem}>\r\n            <span className={styles.errorTitle}>Message: </span>\r\n            <span className={styles.errorMessage}>\r\n              {props.error.display_message == null\r\n                ? props.error.error_message\r\n                : props.error.display_message}\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <Button\r\n          small\r\n          wide\r\n          className={styles.learnMore}\r\n          target=\"_blank\"\r\n          href={path}\r\n        >\r\n          Learn more\r\n        </Button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nError.displayName = \"Error\";\r\n\r\nexport default Error;\r\n","import React, { useState } from \"react\";\r\nimport Button from \"plaid-threads/Button\";\r\nimport Note from \"plaid-threads/Note\";\r\n\r\nimport Table from \"../Table\";\r\nimport Error from \"../Error\";\r\nimport { DataItem, Categories, ErrorDataItem, Data } from \"../../dataUtilities\";\r\n\r\nimport styles from \"./index.module.scss\";\r\n\r\ninterface Props {\r\n  endpoint: string;\r\n  name?: string;\r\n  categories: Array<Categories>;\r\n  schema: string;\r\n  description: string;\r\n  transformData: (arg: any) => Array<DataItem>;\r\n}\r\n\r\nconst Endpoint = (props: Props) => {\r\n  const [showTable, setShowTable] = useState(false);\r\n  const [transformedData, setTransformedData] = useState<Data>([]);\r\n  const [pdf, setPdf] = useState<string | null>(null);\r\n  const [error, setError] = useState<ErrorDataItem | null>(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const getData = async () => {\r\n    setIsLoading(true);\r\n    const response = await fetch(`/api/${props.endpoint}`, { method: \"GET\" });\r\n    const data = await response.json();\r\n    if (data.error != null) {\r\n      setError(data.error);\r\n      setIsLoading(false);\r\n      return;\r\n    }\r\n    setTransformedData(props.transformData(data)); // transform data into proper format for each individual product\r\n    if (data.pdf != null) {\r\n      setPdf(data.pdf);\r\n    }\r\n    setShowTable(true);\r\n    setIsLoading(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.endpointContainer}>\r\n        <Note info className={styles.post}>\r\n          POST\r\n        </Note>\r\n        <div className={styles.endpointContents}>\r\n          <div className={styles.endpointHeader}>\r\n            {props.name != null && (\r\n              <span className={styles.endpointName}>{props.name}</span>\r\n            )}\r\n            <span className={styles.schema}>{props.schema}</span>\r\n          </div>\r\n          <div className={styles.endpointDescription}>{props.description}</div>\r\n        </div>\r\n        <div className={styles.buttonsContainer}>\r\n          <Button\r\n            small\r\n            centered\r\n            wide\r\n            secondary\r\n            className={styles.sendRequest}\r\n            onClick={getData}\r\n          >\r\n            {isLoading ? \"Loading...\" : `Send request`}\r\n          </Button>\r\n          {pdf != null && (\r\n            <Button\r\n              small\r\n              centered\r\n              wide\r\n              className={styles.pdf}\r\n              href={`data:application/pdf;base64,${pdf}`}\r\n              componentProps={{ download: \"Asset Report.pdf\" }}\r\n            >\r\n              Download PDF\r\n            </Button>\r\n          )}\r\n        </div>\r\n      </div>\r\n      {showTable && (\r\n        <Table\r\n          categories={props.categories}\r\n          data={transformedData}\r\n          isIdentity={props.endpoint === \"identity\"}\r\n        />\r\n      )}\r\n      {error != null && <Error error={error} />}\r\n    </>\r\n  );\r\n};\r\n\r\nEndpoint.displayName = \"Endpoint\";\r\n\r\nexport default Endpoint;\r\n","import React from \"react\";\r\n\r\nimport styles from \"./index.module.scss\";\r\n\r\ninterface Props {\r\n  children?: React.ReactNode | Array<React.ReactNode>;\r\n  productType: string;\r\n}\r\n\r\nconst TypeContainer: React.FC<Props> = (props) => (\r\n  <div className={styles.container}>\r\n    <h4 className={styles.header}>{props.productType}</h4>\r\n    {props.children}\r\n  </div>\r\n);\r\n\r\nTypeContainer.displayName = \"TypeContainer\";\r\n\r\nexport default TypeContainer;\r\n","import {\r\n  AuthGetResponse,\r\n  Transaction,\r\n  IdentityGetResponse,\r\n  InvestmentsHoldingsGetResponse,\r\n  InvestmentsTransactionsGetResponse,\r\n  AccountsGetResponse,\r\n  ItemGetResponse,\r\n  InstitutionsGetByIdResponse,\r\n  LiabilitiesGetResponse,\r\n  PaymentInitiationPaymentGetResponse,\r\n  AssetReportGetResponse,\r\n  AssetReport,\r\n  TransferGetResponse,\r\n  IncomeVerificationPaystubsGetResponse,\r\n  Paystub,\r\n  Earnings,\r\n} from \"plaid/dist/api\";\r\n\r\nconst formatCurrency = (\r\n  number: number | null | undefined,\r\n  code: string | null | undefined\r\n) => {\r\n  if (number != null && number !== undefined) {\r\n    return ` ${parseFloat(number.toFixed(2)).toLocaleString(\"en\")} ${code}`;\r\n  }\r\n  return \"no data\";\r\n};\r\n\r\nexport interface Categories {\r\n  title: string;\r\n  field: string;\r\n}\r\n\r\n//interfaces for categories in each individual product\r\ninterface AuthDataItem {\r\n  routing: string;\r\n  account: string;\r\n  balance: string;\r\n  name: string;\r\n}\r\ninterface TransactionsDataItem {\r\n  amount: string;\r\n  date: string;\r\n  name: string;\r\n}\r\n\r\ninterface IdentityDataItem {\r\n  addresses: string;\r\n  phoneNumbers: string;\r\n  emails: string;\r\n  names: string;\r\n}\r\n\r\ninterface BalanceDataItem {\r\n  balance: string;\r\n  subtype: string | null;\r\n  mask: string;\r\n  name: string;\r\n}\r\n\r\ninterface InvestmentsDataItem {\r\n  mask: string;\r\n  quantity: string;\r\n  price: string;\r\n  value: string;\r\n  name: string;\r\n}\r\n\r\ninterface InvestmentsTransactionItem {\r\n  amount: number;\r\n  date: string;\r\n  name: string;\r\n}\r\n\r\ninterface LiabilitiessDataItem {\r\n  amount: string;\r\n  date: string;\r\n  name: string;\r\n  type: string;\r\n}\r\n\r\ninterface PaymentDataItem {\r\n  paymentId: string;\r\n  amount: string;\r\n  status: string;\r\n  statusUpdate: string;\r\n  recipientId: string;\r\n}\r\ninterface ItemDataItem {\r\n  billed: string;\r\n  available: string;\r\n  name: string;\r\n}\r\n\r\ninterface AssetsDataItem {\r\n  account: string;\r\n  balance: string;\r\n  transactions: number;\r\n  daysAvailable: number;\r\n}\r\n\r\ninterface TransferDataItem {\r\n  transferId: string;\r\n  amount: string;\r\n  type: string;\r\n  achClass: string;\r\n  network: string;\r\n}\r\n\r\ninterface IncomePaystubsDataItem {\r\n  description: string;\r\n  currentAmount: number | null;\r\n  currency: number | null;\r\n}\r\n\r\nexport interface ErrorDataItem {\r\n  error_type: string;\r\n  error_code: string;\r\n  error_message: string;\r\n  display_message: string | null;\r\n  status_code: number | null;\r\n}\r\n\r\n//all possible product data interfaces\r\nexport type DataItem =\r\n  | AuthDataItem\r\n  | TransactionsDataItem\r\n  | IdentityDataItem\r\n  | BalanceDataItem\r\n  | InvestmentsDataItem\r\n  | InvestmentsTransactionItem\r\n  | LiabilitiessDataItem\r\n  | ItemDataItem\r\n  | PaymentDataItem\r\n  | AssetsDataItem\r\n  | TransferDataItem\r\n  | IncomePaystubsDataItem;\r\n\r\nexport type Data = Array<DataItem>;\r\n\r\nexport const authCategories: Array<Categories> = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n  },\r\n  {\r\n    title: \"Balance\",\r\n    field: \"balance\",\r\n  },\r\n  {\r\n    title: \"Account #\",\r\n    field: \"account\",\r\n  },\r\n  {\r\n    title: \"Routing #\",\r\n    field: \"routing\",\r\n  },\r\n];\r\n\r\nexport const transactionsCategories: Array<Categories> = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n  },\r\n  {\r\n    title: \"Amount\",\r\n    field: \"amount\",\r\n  },\r\n  {\r\n    title: \"Date\",\r\n    field: \"date\",\r\n  },\r\n];\r\n\r\nexport const identityCategories: Array<Categories> = [\r\n  {\r\n    title: \"Names\",\r\n    field: \"names\",\r\n  },\r\n  {\r\n    title: \"Emails\",\r\n    field: \"emails\",\r\n  },\r\n  {\r\n    title: \"Phone numbers\",\r\n    field: \"phoneNumbers\",\r\n  },\r\n  {\r\n    title: \"Addresses\",\r\n    field: \"addresses\",\r\n  },\r\n];\r\n\r\nexport const balanceCategories: Array<Categories> = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n  },\r\n  {\r\n    title: \"Balance\",\r\n    field: \"balance\",\r\n  },\r\n  {\r\n    title: \"Subtype\",\r\n    field: \"subtype\",\r\n  },\r\n  {\r\n    title: \"Mask\",\r\n    field: \"mask\",\r\n  },\r\n];\r\n\r\nexport const investmentsCategories: Array<Categories> = [\r\n  {\r\n    title: \"Account Mask\",\r\n    field: \"mask\",\r\n  },\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n  },\r\n  {\r\n    title: \"Quantity\",\r\n    field: \"quantity\",\r\n  },\r\n  {\r\n    title: \"Close Price\",\r\n    field: \"price\",\r\n  },\r\n  {\r\n    title: \"Value\",\r\n    field: \"value\",\r\n  },\r\n];\r\n\r\nexport const investmentsTransactionsCategories: Array<Categories> = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n  },\r\n  {\r\n    title: \"Amount\",\r\n    field: \"amount\",\r\n  },\r\n  {\r\n    title: \"Date\",\r\n    field: \"date\",\r\n  },\r\n];\r\n\r\nexport const liabilitiesCategories: Array<Categories> = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n  },\r\n  {\r\n    title: \"Type\",\r\n    field: \"type\",\r\n  },\r\n  {\r\n    title: \"Last Payment Date\",\r\n    field: \"date\",\r\n  },\r\n  {\r\n    title: \"Last Payment Amount\",\r\n    field: \"amount\",\r\n  },\r\n];\r\n\r\nexport const itemCategories: Array<Categories> = [\r\n  {\r\n    title: \"Institution Name\",\r\n    field: \"name\",\r\n  },\r\n  {\r\n    title: \"Billed Products\",\r\n    field: \"billed\",\r\n  },\r\n  {\r\n    title: \"Available Products\",\r\n    field: \"available\",\r\n  },\r\n];\r\n\r\nexport const accountsCategories: Array<Categories> = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n  },\r\n  {\r\n    title: \"Balance\",\r\n    field: \"balance\",\r\n  },\r\n  {\r\n    title: \"Subtype\",\r\n    field: \"subtype\",\r\n  },\r\n  {\r\n    title: \"Mask\",\r\n    field: \"mask\",\r\n  },\r\n];\r\n\r\nexport const paymentCategories: Array<Categories> = [\r\n  {\r\n    title: \"Payment ID\",\r\n    field: \"paymentId\",\r\n  },\r\n  {\r\n    title: \"Amount\",\r\n    field: \"amount\",\r\n  },\r\n  {\r\n    title: \"Status\",\r\n    field: \"status\",\r\n  },\r\n  {\r\n    title: \"Status Update\",\r\n    field: \"statusUpdate\",\r\n  },\r\n  {\r\n    title: \"Recipient ID\",\r\n    field: \"recipientId\",\r\n  },\r\n];\r\n\r\nexport const assetsCategories: Array<Categories> = [\r\n  {\r\n    title: \"Account\",\r\n    field: \"account\",\r\n  },\r\n  {\r\n    title: \"Transactions\",\r\n    field: \"transactions\",\r\n  },\r\n  {\r\n    title: \"Balance\",\r\n    field: \"balance\",\r\n  },\r\n  {\r\n    title: \"Days Available\",\r\n    field: \"daysAvailable\",\r\n  },\r\n];\r\n\r\nexport const transferCategories: Array<Categories> = [\r\n  {\r\n    title: \"Transfer ID\",\r\n    field: \"transferId\",\r\n  },\r\n  {\r\n    title: \"Amount\",\r\n    field: \"amount\",\r\n  },\r\n  {\r\n    title: \"Type\",\r\n    field: \"type\",\r\n  },\r\n  {\r\n    title: \"ACH Class\",\r\n    field: \"achClass\",\r\n  },\r\n  {\r\n    title: \"Network\",\r\n    field: \"network\",\r\n  },\r\n  {\r\n    title: \"Status\",\r\n    field: \"status\",\r\n  },\r\n];\r\n\r\nexport const incomePaystubsCategories: Array<Categories> = [\r\n  {\r\n    title: \"Description\",\r\n    field: \"description\",\r\n  },\r\n  {\r\n    title: \"Current Amount\",\r\n    field: \"currentAmount\",\r\n  },\r\n  {\r\n    title: \"Currency\",\r\n    field: \"currency\",\r\n  }\r\n]\r\n\r\nexport const transformAuthData = (data: AuthGetResponse) => {\r\n  return data.numbers.ach!.map((achNumbers) => {\r\n    const account = data.accounts!.filter((a) => {\r\n      return a.account_id === achNumbers.account_id;\r\n    })[0];\r\n    const balance: number | null | undefined =\r\n      account.balances.available || account.balances.current;\r\n    const obj: DataItem = {\r\n      name: account.name,\r\n      balance: formatCurrency(balance, account.balances.iso_currency_code),\r\n      account: achNumbers.account!,\r\n      routing: achNumbers.routing!,\r\n    };\r\n    return obj;\r\n  });\r\n};\r\n\r\nexport const transformTransactionsData = (\r\n  data: {latest_transactions: Transaction[]}\r\n): Array<DataItem> => {\r\n  return data.latest_transactions!.map((t) => {\r\n    const item: DataItem = {\r\n      name: t.name!,\r\n      amount: formatCurrency(t.amount!, t.iso_currency_code),\r\n      date: t.date,\r\n    };\r\n    return item;\r\n  });\r\n};\r\n\r\ninterface IdentityData {\r\n  identity: IdentityGetResponse[\"accounts\"];\r\n}\r\n\r\nexport const transformIdentityData = (data: IdentityData) => {\r\n  const final: Array<DataItem> = [];\r\n  const identityData = data.identity![0];\r\n  identityData.owners.forEach((owner) => {\r\n    const names = owner.names.map((name) => {\r\n      return name;\r\n    });\r\n    const emails = owner.emails.map((email) => {\r\n      return email.data;\r\n    });\r\n    const phones = owner.phone_numbers.map((phone) => {\r\n      return phone.data;\r\n    });\r\n    const addresses = owner.addresses.map((address) => {\r\n      return `${address.data.street} ${address.data.city}, ${address.data.region} ${address.data.postal_code}`;\r\n    });\r\n\r\n    const num = Math.max(\r\n      emails.length,\r\n      names.length,\r\n      phones.length,\r\n      addresses.length\r\n    );\r\n\r\n    for (let i = 0; i < num; i++) {\r\n      const obj = {\r\n        names: names[i] || \"\",\r\n        emails: emails[i] || \"\",\r\n        phoneNumbers: phones[i] || \"\",\r\n        addresses: addresses[i] || \"\",\r\n      };\r\n      final.push(obj);\r\n    }\r\n  });\r\n\r\n  return final;\r\n};\r\n\r\nexport const transformBalanceData = (data: AccountsGetResponse) => {\r\n  const balanceData = data.accounts;\r\n  return balanceData.map((account) => {\r\n    const balance: number | null | undefined =\r\n      account.balances.available || account.balances.current;\r\n    const obj: DataItem = {\r\n      name: account.name,\r\n      balance: formatCurrency(balance, account.balances.iso_currency_code),\r\n      subtype: account.subtype,\r\n      mask: account.mask!,\r\n    };\r\n    return obj;\r\n  });\r\n};\r\n\r\ninterface InvestmentData {\r\n  error: null;\r\n  holdings: InvestmentsHoldingsGetResponse;\r\n}\r\n\r\nexport const transformInvestmentsData = (data: InvestmentData) => {\r\n  const holdingsData = data.holdings.holdings!.sort(function (a, b) {\r\n    if (a.account_id > b.account_id) return 1;\r\n    return -1;\r\n  });\r\n  return holdingsData.map((holding) => {\r\n    const account = data.holdings.accounts!.filter(\r\n      (acc) => acc.account_id === holding.account_id\r\n    )[0];\r\n    const security = data.holdings.securities!.filter(\r\n      (sec) => sec.security_id === holding.security_id\r\n    )[0];\r\n    const value = holding.quantity * security.close_price!;\r\n\r\n    const obj: DataItem = {\r\n      mask: account.mask!,\r\n      name: security.name!,\r\n      quantity: formatCurrency(holding.quantity, \"\"),\r\n      price: formatCurrency(\r\n        security.close_price!,\r\n        account.balances.iso_currency_code\r\n      ),\r\n      value: formatCurrency(value, account.balances.iso_currency_code),\r\n    };\r\n    return obj;\r\n  });\r\n};\r\n\r\ninterface InvestmentsTransactionData {\r\n  error: null;\r\n  investments_transactions: InvestmentsTransactionsGetResponse;\r\n}\r\n\r\nexport const transformInvestmentTransactionsData = (data: InvestmentsTransactionData) => {\r\n  const investmentTransactionsData = data.investments_transactions.investment_transactions!.sort(function (a,b) {\r\n    if (a.account_id > b.account_id) return 1;\r\n    return -1;\r\n  });\r\n  return investmentTransactionsData.map((investmentTransaction) => {\r\n    const security = data.investments_transactions.securities!.filter(\r\n      (sec) => sec.security_id === investmentTransaction.security_id\r\n    )[0];\r\n\r\n    const obj: DataItem = {\r\n      name: security.name!,\r\n      amount: investmentTransaction.amount,\r\n      date: investmentTransaction.date,\r\n    };\r\n    return obj;\r\n  });\r\n};\r\n\r\ninterface LiabilitiesDataResponse {\r\n  error: null;\r\n  liabilities: LiabilitiesGetResponse;\r\n}\r\n\r\nexport const transformLiabilitiesData = (data: LiabilitiesDataResponse) => {\r\n  const liabilitiesData = data.liabilities.liabilities;\r\n  //console.log(liabilitiesData)\r\n  //console.log(\"random\")\r\n  const credit = liabilitiesData.credit!.map((credit) => {\r\n    const account = data.liabilities.accounts.filter(\r\n      (acc) => acc.account_id === credit.account_id\r\n    )[0];\r\n    const obj: DataItem = {\r\n      name: account.name,\r\n      type: \"credit card\",\r\n      date: credit.last_payment_date ?? \"\",\r\n      amount: formatCurrency(\r\n        credit.last_payment_amount,\r\n        account.balances.iso_currency_code\r\n      ),\r\n    };\r\n    return obj;\r\n  });\r\n\r\n  const mortgages = liabilitiesData.mortgage?.map((mortgage) => {\r\n    const account = data.liabilities.accounts.filter(\r\n      (acc) => acc.account_id === mortgage.account_id\r\n    )[0];\r\n    const obj: DataItem = {\r\n      name: account.name,\r\n      type: \"mortgage\",\r\n      date: mortgage.last_payment_date!,\r\n      amount: formatCurrency(\r\n        mortgage.last_payment_amount!,\r\n        account.balances.iso_currency_code\r\n      ),\r\n    };\r\n    return obj;\r\n  });\r\n\r\n  const student = liabilitiesData.student?.map((student) => {\r\n    const account = data.liabilities.accounts.filter(\r\n      (acc) => acc.account_id === student.account_id\r\n    )[0];\r\n    const obj: DataItem = {\r\n      name: account.name,\r\n      type: \"student loan\",\r\n      date: student.last_payment_date!,\r\n      amount: formatCurrency(\r\n        student.last_payment_amount!,\r\n        account.balances.iso_currency_code\r\n      ),\r\n    };\r\n    return obj;\r\n  });\r\n\r\n  return credit!.concat(mortgages!).concat(student!);\r\n};\r\n\r\nexport const transformTransferData = (data: TransferGetResponse): Array<DataItem> => {\r\n  const transferData = data.transfer;\r\n  return [\r\n    {\r\n      transferId: transferData.id,\r\n      amount: transferData.amount,\r\n      type: transferData.type,\r\n      achClass: transferData.ach_class,\r\n      network: transferData.network,\r\n      status: transferData.status,\r\n    },\r\n  ];\r\n};\r\n\r\ninterface ItemData {\r\n  item: ItemGetResponse[\"item\"];\r\n  institution: InstitutionsGetByIdResponse[\"institution\"];\r\n}\r\n\r\nexport const transformItemData = (data: ItemData): Array<DataItem> => {\r\n  return [\r\n    {\r\n      name: data.institution.name,\r\n      billed: data.item.billed_products.join(\", \"),\r\n      available: data.item.available_products.join(\", \"),\r\n    },\r\n  ];\r\n};\r\n\r\nexport const transformAccountsData = (data: AccountsGetResponse) => {\r\n  const accountsData = data.accounts;\r\n  return accountsData.map((account) => {\r\n    const balance: number | null | undefined =\r\n      account.balances.available || account.balances.current;\r\n    const obj: DataItem = {\r\n      name: account.name,\r\n      balance: formatCurrency(balance, account.balances.iso_currency_code),\r\n      subtype: account.subtype,\r\n      mask: account.mask!,\r\n    };\r\n    return obj;\r\n  });\r\n};\r\n\r\ninterface PaymentData {\r\n  payment: PaymentInitiationPaymentGetResponse;\r\n}\r\n\r\nexport const transformPaymentData = (data: PaymentData) => {\r\n  const statusUpdate =\r\n    typeof data.payment.last_status_update === \"string\"\r\n      ? data.payment.last_status_update.replace(\"T\", \" \").replace(\"Z\", \"\")\r\n      : new Date(data.payment.last_status_update * 1000) // Java data comes as timestamp\r\n          .toISOString()\r\n          .replace(\"T\", \" \")\r\n          .replace(\"Z\", \"\");\r\n  return [\r\n    {\r\n      paymentId: data.payment.payment_id,\r\n      amount: `${data.payment.amount.currency} ${data.payment.amount.value}`,\r\n      status: data.payment.status,\r\n      statusUpdate: statusUpdate,\r\n      recipientId: data.payment.recipient_id,\r\n    },\r\n  ];\r\n};\r\n\r\ninterface AssetResponseData {\r\n  json: AssetReport;\r\n}\r\n\r\nexport const transformAssetsData = (data: AssetResponseData) => {\r\n  const assetItems = data.json.items;\r\n  return assetItems.flatMap((item) => {\r\n    return item.accounts.map((account) => {\r\n      const balance: number | null | undefined =\r\n        account.balances.available || account.balances.current;\r\n      const obj: DataItem = {\r\n        account: account.name,\r\n        balance: formatCurrency(balance, account.balances.iso_currency_code),\r\n        transactions: account.transactions!.length,\r\n        daysAvailable: account.days_available!,\r\n      };\r\n      return obj;\r\n    });\r\n  });\r\n};\r\n\r\ninterface IncomePaystub {\r\n  paystubs: IncomeVerificationPaystubsGetResponse,\r\n}\r\n\r\nexport const transformIncomePaystubsData = (data: IncomePaystub) => {\r\n  const paystubsItemsArray: Array<Paystub> = data.paystubs.paystubs\r\n  var finalArray: Array<IncomePaystubsDataItem> = []\r\n  for (var i = 0; i < paystubsItemsArray.length; i++){\r\n    var ActualEarningVariable: any = paystubsItemsArray[i].earnings\r\n    for (var j = 0; j < ActualEarningVariable.breakdown.length; j++){\r\n      var payStubItem: IncomePaystubsDataItem = {\r\n        description: paystubsItemsArray[i].employer.name + '_' + ActualEarningVariable.breakdown[j].description,\r\n        currentAmount: ActualEarningVariable.breakdown[j].current_amount,\r\n        currency: ActualEarningVariable.breakdown[j].iso_currency_code\r\n      }\r\n    finalArray.push(payStubItem)\r\n  }\r\n}\r\n  return finalArray\r\n}\r\n","import React, { useContext } from \"react\";\r\n\r\nimport Endpoint from \"../Endpoint\";\r\nimport Context from \"../../Context\";\r\nimport ProductTypesContainer from \"./ProductTypesContainer\";\r\nimport {\r\n  transactionsCategories,\r\n  authCategories,\r\n  identityCategories,\r\n  balanceCategories,\r\n  investmentsCategories,\r\n  investmentsTransactionsCategories,\r\n  liabilitiesCategories,\r\n  paymentCategories,\r\n  assetsCategories,\r\n  incomePaystubsCategories,\r\n  transferCategories,\r\n  transformAuthData,\r\n  transformTransactionsData,\r\n  transformBalanceData,\r\n  transformInvestmentsData,\r\n  transformInvestmentTransactionsData,\r\n  transformLiabilitiesData,\r\n  transformIdentityData,\r\n  transformPaymentData,\r\n  transformAssetsData,\r\n  transformTransferData,\r\n  transformIncomePaystubsData,\r\n} from \"../../dataUtilities\";\r\n\r\nconst Products = () => {\r\n  const { products } = useContext(Context);\r\n  return (\r\n    <ProductTypesContainer productType=\"Products\">\r\n      {products.includes(\"payment_initiation\") && (\r\n        <Endpoint\r\n          endpoint=\"payment\"\r\n          name=\"Payment\"\r\n          categories={paymentCategories}\r\n          schema=\"/payment/get/\"\r\n          description=\"Retrieve information about your latest payment.\"\r\n          transformData={transformPaymentData}\r\n        />\r\n      )}\r\n      <Endpoint\r\n        endpoint=\"auth\"\r\n        name=\"Auth\"\r\n        categories={authCategories}\r\n        schema=\"/auth/get/\"\r\n        description=\"Retrieve account and routing numbers for checking and savings accounts.\"\r\n        transformData={transformAuthData}\r\n      />\r\n      <Endpoint\r\n        endpoint=\"transactions\"\r\n        name=\"Transactions\"\r\n        categories={transactionsCategories}\r\n        schema=\"/transactions/sync/\"\r\n        description=\"Retrieve transactions or incremental updates for credit and depository accounts.\"\r\n        transformData={transformTransactionsData}\r\n      />\r\n      <Endpoint\r\n        endpoint=\"identity\"\r\n        name=\"Identity\"\r\n        categories={identityCategories}\r\n        schema=\"/identity/get/\"\r\n        description=\"Retrieve Identity information on file with the bank. Reduce\r\n        fraud by comparing user-submitted data to validate identity.\"\r\n        transformData={transformIdentityData}\r\n      />\r\n      {products.includes(\"assets\") && (\r\n        <Endpoint\r\n          endpoint=\"assets\"\r\n          name=\"Assets\"\r\n          categories={assetsCategories}\r\n          schema=\"/assets_report/get/\"\r\n          description=\"Create and retrieve assets information an asset report\"\r\n          transformData={transformAssetsData}\r\n        />\r\n      )}\r\n      <Endpoint\r\n        endpoint=\"balance\"\r\n        name=\"Balance\"\r\n        categories={balanceCategories}\r\n        schema=\"/accounts/balance/get/\"\r\n        description=\"Check balances in real time to prevent non-sufficient funds\r\n        fees.\"\r\n        transformData={transformBalanceData}\r\n      />\r\n      {products.includes(\"investments\") && (\r\n        <>\r\n        <Endpoint\r\n          endpoint=\"holdings\"\r\n          name=\"Investments\"\r\n          categories={investmentsCategories}\r\n          schema=\"/investments/holdings/get/\"\r\n          description=\"Retrieve investment holdings on file with the bank,\r\n        brokerage, or investment institution. Analyze over-exposure\r\n        to market segments.\"\r\n        transformData={transformInvestmentsData}\r\n      />\r\n      <Endpoint\r\n        endpoint=\"investments_transactions\"\r\n        name=\"Investments Transactions\"\r\n        categories={investmentsTransactionsCategories}\r\n        schema=\"/investments/transactions/get\"\r\n        description=\"Retrieve investment transactions on file with the bank,\r\n        brokerage, or investments institution.\"\r\n        transformData={transformInvestmentTransactionsData}\r\n      />\r\n      <Endpoint\r\n        endpoint=\"liabilities\"\r\n        name=\"Liabilities\"\r\n        categories={liabilitiesCategories}\r\n        schema=\"/liabilities/get\"\r\n        description=\"Retrieve liabilities and various details about an Item with loan or credit accounts.\"\r\n        transformData={transformLiabilitiesData}\r\n      />\r\n      </>\r\n      )}\r\n      {products.includes(\"transfer\") && (\r\n        <Endpoint\r\n          endpoint=\"transfer\"\r\n          name=\"Transfer\"\r\n          categories={transferCategories}\r\n          schema=\"/transfer/get/\"\r\n          description=\"Retrieve information about your latest ACH Transfer.\"\r\n          transformData={transformTransferData}\r\n        />\r\n      )}\r\n      {products.includes(\"income_verification\") && (\r\n        <Endpoint\r\n          endpoint=\"/income/verification/paystubs\"\r\n          name=\"Income Paystubs\"\r\n          categories={incomePaystubsCategories}\r\n          schema=\"/income/verification/paystubs\"\r\n          description=\"(Deprecated) Retrieve information from the paystubs used for income verification\"\r\n          transformData={transformIncomePaystubsData}\r\n          />\r\n      )}\r\n    </ProductTypesContainer>\r\n  );\r\n};\r\n\r\nProducts.displayName = \"Products\";\r\n\r\nexport default Products;\r\n","import React from \"react\";\r\n\r\nimport Endpoint from \"../Endpoint\";\r\nimport ProductTypesContainer from \"./ProductTypesContainer\";\r\nimport {\r\n  transformItemData,\r\n  transformAccountsData,\r\n  itemCategories,\r\n  accountsCategories,\r\n} from \"../../dataUtilities\";\r\n\r\nconst Items = () => (\r\n  <>\r\n    <ProductTypesContainer productType=\"Item Management\">\r\n      <Endpoint\r\n        endpoint=\"item\"\r\n        categories={itemCategories}\r\n        schema=\"/item/get/\"\r\n        description=\"Retrieve information about an Item, like the institution,\r\n        billed products, available products, and webhook\r\n        information.\"\r\n        transformData={transformItemData}\r\n      />\r\n      <Endpoint\r\n        endpoint=\"accounts\"\r\n        schema=\"/accounts/get\"\r\n        categories={accountsCategories}\r\n        description=\"Retrieve high-level information about all accounts associated with an item.\"\r\n        transformData={transformAccountsData}\r\n      />\r\n    </ProductTypesContainer>\r\n  </>\r\n);\r\n\r\nItems.displayName = \"Items\";\r\n\r\nexport default Items;\r\n","import React, { useEffect, useContext, useCallback } from \"react\";\r\n\r\nimport Header from \"./Components/Headers\";\r\nimport Products from \"./Components/ProductTypes/Products\";\r\nimport Items from \"./Components/ProductTypes/Items\";\r\nimport Context from \"./Context\";\r\n\r\nimport styles from \"./App.module.scss\";\r\n\r\nconst App = () => {\r\n  const { linkSuccess, isItemAccess, dispatch } = useContext(Context);\r\n\r\n  const getInfo = useCallback(async () => {\r\n    const response = await fetch(\"/api/info\", { method: \"POST\" });\r\n    if (!response.ok) {\r\n      dispatch({ type: \"SET_STATE\", state: { backend: false } });\r\n      return { paymentInitiation: false };\r\n    }\r\n    const data = await response.json();\r\n    const paymentInitiation: boolean = data.products.includes(\r\n      \"payment_initiation\"\r\n    );\r\n    dispatch({\r\n      type: \"SET_STATE\",\r\n      state: {\r\n        products: data.products,\r\n      },\r\n    });\r\n    return { paymentInitiation };\r\n  }, [dispatch]);\r\n\r\n  const generateToken = useCallback(\r\n    async (paymentInitiation) => {\r\n      const path = paymentInitiation\r\n        ? \"/api/create_link_token_for_payment\"\r\n        : \"/api/create_link_token\";\r\n      const response = await fetch(path, {\r\n        method: \"POST\",\r\n      });\r\n      if (!response.ok) {\r\n        dispatch({ type: \"SET_STATE\", state: { linkToken: null } });\r\n        return;\r\n      }\r\n      const data = await response.json();\r\n      if (data) {\r\n        if (data.error != null) {\r\n          dispatch({\r\n            type: \"SET_STATE\",\r\n            state: {\r\n              linkToken: null,\r\n              linkTokenError: data.error,\r\n            },\r\n          });\r\n          return;\r\n        }\r\n        dispatch({ type: \"SET_STATE\", state: { linkToken: data.link_token } });\r\n      }\r\n      localStorage.setItem(\"link_token\", data.link_token); //to use later for Oauth\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  useEffect(() => {\r\n    const init = async () => {\r\n      const { paymentInitiation } = await getInfo(); // used to determine which path to take when generating token\r\n      // do not generate a new token for OAuth redirect; instead\r\n      // setLinkToken from localStorage\r\n      if (window.location.href.includes(\"?oauth_state_id=\")) {\r\n        dispatch({\r\n          type: \"SET_STATE\",\r\n          state: {\r\n            linkToken: localStorage.getItem(\"link_token\"),\r\n          },\r\n        });\r\n        return;\r\n      }\r\n      generateToken(paymentInitiation);\r\n    };\r\n    init();\r\n  }, [dispatch, generateToken, getInfo]);\r\n\r\n  return (\r\n    <div className={styles.App}>\r\n      <div className={styles.container}>\r\n        <Header />\r\n        {linkSuccess && isItemAccess && (\r\n          <>\r\n            <Products />\r\n            <Items />\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { QuickstartProvider } from \"./Context\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <QuickstartProvider>\r\n      <App />\r\n    </QuickstartProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"endpointContainer\":\"Endpoint_endpointContainer__3fda2\",\"post\":\"Endpoint_post__1UvGE\",\"endpointContents\":\"Endpoint_endpointContents__2HH8F\",\"endpointHeader\":\"Endpoint_endpointHeader__Og54U\",\"endpointName\":\"Endpoint_endpointName__3sM7d\",\"schema\":\"Endpoint_schema__3Unkw\",\"endpointDescription\":\"Endpoint_endpointDescription__CBsNS\",\"buttonsContainer\":\"Endpoint_buttonsContainer__oiij7\",\"sendRequest\":\"Endpoint_sendRequest__1vGcs\",\"pdf\":\"Endpoint_pdf__3PsbD\"};"],"sourceRoot":""}